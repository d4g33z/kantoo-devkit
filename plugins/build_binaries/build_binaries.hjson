OS: funtoo
#ARCH="arm-32bit"
#SUBARCH="rpi3"
#ENTROPY_ARCH="armv7l"
ARCH: x86-64bit
SUBARCH: amd64-k10
ENTROPY_ARCH: amd64

#a directory of dot files
DOT_DIR:lib/dot

#the intial state
DOCKER_TAG:stage3

DOCKER_OPTS:
{
    #docker.run kwargs
    tty:true,
    init:true,
    remove:true
    entrypoint:"/bin/bash",
    detach:true,
}

REPOSITORY_NAME: testing.kantoo.org
REPOSITORY_DESCRIPTION: Funtoo on RPI3!
envplugins:
{
    EDITOR: cat
    LC_ALL: en_US.UTF-8
}

plugins:
{

    #-----------------------------------------------------------
    # exec plugins
    install_distcc:
    {
        skip:true
        DISTCCD_HOSTS: 192.168.1.27/8,cpp,lzo 127.0.0.1/4
        CHOST:x86_64-pc-linux-gnu
        path: plugins/build_binaries/bash/install_distcc.sh
        exec:true
    },



    install_portage_pkgs:
    {
        IN_PORT_PKGS:
            '''
            app-admin/equo
            sys-apps/entropy-server
            app-admin/metalog
            app-admin/sudo
            app-editors/vim
            app-portage/eix
            net-dns/avahi
            net-misc/chrony
            net-misc/networkmanager
            sys-auth/nss-mdns
            '''

        path: plugins/build_binaries/python/install_portage_pkgs.py
        exec:true
    },

    #-----------------------------------------------------------
    # file plugins


    #notice the conf.d bash subsitutions are masked from f-string sub
    conf_d_distccd:
    {
        DISTCCD_ALLOW: 192.168.1.0/24
        bind: /etc/conf.d/distccd
        text:
        '''
# /etc/conf.d/distccd: config file for /etc/init.d/distccd

DISTCCD_OPTS=""

# this is the distccd executable
DISTCCD_EXEC="/usr/bin/distccd"

# this is where distccd will store its pid file
DISTCCD_PIDFILE="/var/run/distccd/distccd.pid"

# set this option to run distccd with extra parameters
# Default port is 3632.  For most people the default is okay.
DISTCCD_OPTS="${{DISTCCD_OPTS}} --port 3632"

# Logging
# You can change some logging options here:
# --log-file FILE
# --log-level LEVEL  [critical,error,warning, notice, info, debug]
#
# Leaving --log-file blank will log to syslog
# example: --log-file /dev/null --log-level warning
# example: --log-level critical

DISTCCD_OPTS="${{DISTCCD_OPTS}} --log-level critical"

# SECURITY NOTICE:
# It is HIGHLY recommended that you use the --listen option
# for increased security. You can specify an IP to permit connections
# from or a CIDR mask
# --listen accepts only a single IP
# --allow is now mandatory as of distcc-2.18.
# example:  --allow 192.168.0.0/24
# example:  --allow 192.168.0.5 --allow 192.168.0.150
# example:  --listen 192.168.0.2
DISTCCD_OPTS="${{DISTCCD_OPTS}} --allow {DISTCCD_ALLOW} --allow 127.0.0.1"
#DISTCCD_OPTS="${{DISTCCD_OPTS}} --allow 192.168.0.0/24"
#DISTCCD_OPTS="${{DISTCCD_OPTS}} --listen 192.168.0.2"

# set this for niceness
# Default is 15
DISTCCD_OPTS="${{DISTCCD_OPTS}} -N 15"

        '''
    },

    makeconf:
    {
        VIDEO_CARDS:nvidia
        INPUT_DEVICES:evdev
        #VIDEO_CARDS:fbdev vc4
        #INPUT_DEVICES:evdev tslib
        JN_MAKE_PROCS:29
        LN_MAKE_PROCS:4
        bind: /etc/portage/make.conf
        text:
        '''
DONT_MOUNT_BOOT=1

#these features are for compiling
FEATURES="buildpkg userfetch distcc distcc-pump"
PKGDIR=/root/packages

#these features are for rebuilding using existing binaries
#FEATURES="userfetch getbinpkg"
#PORTAGE_BINHOST="http://192.168.1.11/funtoo/packages"

MAKEOPTS="-j{JN_MAKE_PROCS} -l{LN_MAKE_PROCS}"

#VIDEO_CARDS="{VIDEO_CARDS}"
#INPUT_DEVICES="{INPUT_DEVICES}"

EMERGE_DEFAULT_OPS="--autounmask-keep-masks --autounmask=y --autounmask-write=n --jobs=3 --quiet-build=n --quiet=n"

        '''
    },

    package_use:
    {
        bind: /etc/portage/package.use
        text:
        '''
net-dns/avahi -python mdnsresponder-compat -utils dbus
#for docker
sys-fs/lvm2 thin
net-misc/openssh -bindist
dev-libs/openssl -bindist
net-wireless/wpa_supplicant -bindist
        '''
    },

    package_env:
    {
        bind: /etc/portage/package.env
        text:
        '''
sys-apps/man-db nodistcc-pump.conf
sys-devel/bison nodistcc-pump.conf
app-editors/nano nodistcc-pump.conf
dev-util/cmake nodistcc.conf
        '''
    },

    portage_env_no_distcc:
    {
        bind: /etc/portage/env/nodistcc.conf
        text:
        '''
FEATURES="$FEATURES -distcc-pump -distcc"
        '''
    },

    portage_env_no_distcc_pump:
    {
        bind: /etc/portage/env/nodistcc-pump.conf
        text:
        '''
FEATURES="$FEATURES -distcc-pump"
        '''
    },

    #-----------------------------------------------------------
    # dir plugins
    meta_repo:
    {
        #must explicitly state this equivalence
        path: /var/git
        bind: /var/git
    },

    distfiles:
    {
        path: /var/cache/portage/distfiles
        bind: /var/cache/portage/distfiles
        mode: rw
    },

    #this is mounted in volatile memory;
    #this does not work yet
#    portage_tmpdir:
#    {
#        #tmpfs should set tmpfs_size and tmpfs_mode as well
#        tmpfs: ''
#        bind: /var/tmp/portage
#    },

    lib_python:
    {
        path: lib/python/kano
        bind: /entropy/plugins/kano
    },

    #collect portage compiled binaries here
    portage_artifacts:
    {
        path: sab_workspace/portage_artifacts
        bind: /root/packages
        mode: rw
    },

    entropy_artifacts:
    {
        path: sab_workspace/entropy_artifacts
        bind: /entropy/artifacts
        mode: rw
    },

}

