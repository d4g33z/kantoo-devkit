#------------------------------------------------------------------
#   install equo on a fresh stage3, and then use it to install
#   a set of binaries from the repo at REPOSITORY_URI
#   configure the system to be usuable on first boot
#   install kernel and firmware
#   tar root and boot filesystems
#------------------------------------------------------------------

OS: funtoo
#ARCH: arm-32bit
#SUBARCH: raspi3
#ENTROPY_ARCH:armv7l
ARCH: x86-64bit
SUBARCH: amd64-k10
ENTROPY_ARCH: amd64

#a directory of files and dirs to bind
SYSROOT_DIR:lib/sysroot

#the intial state
DOCKER_INIT_IMG: build_binaries:emerge_world

DOCKER_OPTS:
{
    #docker.run kwargs
    tty:true,
    init:true,
    remove:false,
    entrypoint:"/bin/bash",
    detach:true,
}

#for testing
REPOSITORY_URI: file:///entropy/artifacts
REPOSITORY_NAME: testing.kantoo.org
REPOSITORY_DESCRIPTION: Funtoo on RPI3!

CONFIG_SERIAL: 1

envplugins:
{
    EDITOR: cat
    LC_ALL: en_US.UTF-8
}

plugins:
{

    #-----------------------------------------------------------
    # exec plugins

    install_equo:
    {
        text:
        '''
        #!/usr/bin/env sh
        . /entropy/plugins/kantoo.sh && install_equo

        '''
        exec:true
    },

    unmask_equo_pkgs:
    {
        PKGDIR:/portage/packages
        ENTR_UNMASK_FILE:/etc/entropy/packages/package.unmask
        text:
        '''
        #!/usr/bin/env python3
        from kantoo.entropy import *
        unmask_packages()
        '''
        exec:true
    },

    equo_upgrade:
    {
        text:
        '''
        #!/usr/bin/env sh
        . /entropy/plugins/kantoo.sh && equo_upgrade
        '''
        exec:true
    },

    #these all have be configured and ._cfg_* files removed
    install_equo_packages:
    {
        #unset means false
        #ENTR_PRETEND:1
        IN_ENTR_PKGS:
            '''
            app-editors/vim
            app-admin/metalog
            net-dns/avahi
            net-misc/chrony
            net-misc/networkmanager
            sys-auth/nss-mdns
            net-fs/nfs-utils
            net-wireless/hostapd
            '''
        text:
        '''
        #!/usr/bin/env python3
        from kantoo.entropy import *
        equo_install()
        '''
        exec:true
    },

    config_services:
    {
        text:
        '''
        #!/usr/bin/env sh
        rc-update del hwclock boot
        rc-update add swclock boot
        rc-update add dhcpcd default
        rc-update add dbus default
        rc-update add chronyd default
        rc-update add NetworkManager default
        rc-update add metalog default
        rc-update add avahi-daemon default
        rc-update add avahi-dnsconfd default
        '''
        exec:true
    },

    config_system:
    {
        ENTROPY_ARCH: ''
        CONFIG_SERIAL: ''
        HOST_NAME:stage4
        ROOT_PASSWD:iamsolame
        text:
        '''
        #!/usr/bin/env sh
        . /entropy/plugins/kantoo.sh && configure_stage4
        '''
        exec:true
    },

    install_firmware:
    {
        RPI_FIRMWARE:/entropy/rpi
        text:
        '''
        #!/usr/bin/env sh
        . /entropy/plugins/kantoo.sh && install_firmware
        '''
        exec:true
    },

    install_kernel:
    {
        RPI_FIRMWARE:/entropy/rpi
        CONFIG_SERIAL: ''
        text:
        '''
        #!/usr/bin/env sh
        . /entropy/plugins/kantoo.sh && install_kernel
        '''
        exec:true
    },

    #be careful about exporting secrets!!!!
    export_fs:
    {
        text:
        '''
        #!/usr/bin/env sh
        . /entropy/plugins/kantoo.sh && export_fs
        '''
        exec:true
    },

    export_profiles:
    {
        STAGE4_TAR_PATH:/entropy/stage4s/stage4.tar
        text:
        '''
        #!/usr/bin/env python3
        from kantoo.portage import *
        export_profiles()
        '''
        exec: true
    },

    #-----------------------------------------------------------
    # file plugins
    # any paths here in SYSROOT_DIR take precedent over auto created plugins

    #for development
    nfs_exports:
    {
        text:
        '''
        # /etc/exports: NFS file systems being exported.  See exports(5).
        /      192.168.1.0/24(insecure,no_root_squash,nohide,rw,sync,no_subtree_check)
        /boot/ 192.168.1.0/24(insecure,no_root_squash,nohide,rw,sync,no_subtree_check)

        '''
        bind: /etc/exports
    },

    release:
    {
        text:
        '''
        ###KANTOO###

        '''
        bind:/etc/kantoo-release
    },

    #NOTE: entropy/client.conf is in SYSROOT_DIR
    entropyrepo:
    {
        REPOSITORY_URI: ''
        REPOSITORY_NAME: ''
        REPOSITORY_DESCRIPTION: ''

        path: plugins/stage4/etc/entropy/repositories.conf.d/entropy_kantoo.org
        bind: /etc/entropy/repositories.conf.d/entropy_kantoo.org

    },
    
    #conifiguring local entropy server for local testing repo
    entropysrv:
    {
        REPOSITORY_URI: ''
        REPOSITORY_NAME: ''
        REPOSITORY_DESCRIPTION: ''

        path: plugins/stage4/etc/entropy/server.conf
        bind: /etc/entropy/server.conf
    },

    nsswitch_conf:
    {
        path: plugins/stage4/etc/nsswitch.conf
        bind: /etc/nsswitch.conf
    },
    
    #-----------------------------------------------------------
    # dir plugins

    rpi:
    {
        path:sab_workspace/rpi
        bind:/entropy/rpi
        mode:rw
    },

    stage4s:
    {
        path:sab_workspace/stage4s
        bind:/entropy/stage4s
        mode:rw
    },

    #used for unmasking keywordless packages in the repo
    portage_artifacts:
    {
        path: sab_workspace/portage_artifacts
        bind: /portage/packages
        mode: ro
    },

    entropy_artifacts:
    {
        path: sab_workspace/entropy_artifacts
        bind: /entropy/artifacts
        mode: rw
    },


}

