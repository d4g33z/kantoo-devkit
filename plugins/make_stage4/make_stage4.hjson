#------------------------------------------------------------------
#   install equo on a fresh stage3, and then use it to install
#   a set of binaries
#
#   use the entropy server to install from a local testing repo
#   then remove it
#------------------------------------------------------------------

OS: funtoo
#ARCH: arm-32bit
#SUBARCH: raspi3
#ENTROPY_ARCH:armv7l
ARCH: x86-64bit
SUBARCH: amd64-k10
ENTROPY_ARCH: amd64

#a directory of files and dirs to bind
SYSROOT_DIR:lib/sysroot

#the intial state
DOCKER_INIT_IMG: build_binaries:emerge_world

DOCKER_OPTS:
{
    #docker.run kwargs
    tty:true,
    init:true,
    remove:true
    entrypoint:"/bin/bash",
    detach:true,
}

#for testing
REPOSITORY_URI: file:///entropy/artifacts
REPOSITORY_NAME: testing.kantoo.org
REPOSITORY_DESCRIPTION: Funtoo on RPI3!


envplugins:
{
    EDITOR: cat
    LC_ALL: en_US.UTF-8
}

plugins:
{

    #-----------------------------------------------------------
    # exec plugins

    install_equo:
    {
        text:
        '''
#!/usr/bin/env sh
#emerge --binpkg-changed-deps=n equo
emerge --usepkg equo
#REMOVE the ._cfg_client.conf files as we supply one
find /etc -iname '._cfg_*' -exec rm {} \;
#edit /etc/entropy/client.conf
#create /etc/entropy/repositories.conf.d/entropy_kantoo.org

#use these command to regenerate the list of all packages installed by portage
#see https://www.funtoo.org/Entropy
equo rescue generate <<EOF
Yes
Yes
Yes
EOF
equo rescue spmsync
equo update
        '''
        exec:true
    },

    unmask_equo_pkgs:
    {
        PKGDIR:/portage/packages
        ENTR_UNMASK_FILE:/etc/entropy/packages/package.unmask
        path:plugins/make_stage4/python/unmask_equo_packages.py
        exec:true
    },

    equo_upgrade:
    {
        text:
        '''
#!/usr/bin/env sh
equo update --force
equo upgrade
        '''
        exec:true
    },

    #these all have be configured and ._cfg_* files removed
    install_equo_packages:
    {
        #unset means false
        #ENTR_PRETEND:1
        IN_ENTR_PKGS:
            '''
            app-admin/metalog
            net-dns/avahi
            net-misc/chrony
            net-misc/networkmanager
            sys-auth/nss-mdns
            net-fs/nfs-utils
            net-wireless/hostapd
            '''

        path: plugins/make_stage4/python/install_equo_packages.py
        exec:true
    },

    config_services:
    {
        text:
        '''
        #!/usr/bin/env sh
        rc-update del hwclock boot
        rc-update add swclock boot
        rc-update add dhcpcd default
        rc-update add dbus default
        rc-update add chronyd default
        rc-update add NetworkManager default
        rc-update add metalog default
        rc-update add avahi-daemon default
        rc-update add avahi-dnsconfd default
        '''
        exec:true
    },

    config_system:
    {
        HOST_NAME:stage4
        ROOT_PASSWD:iamsolame
        path:plugins/make_stage4/bash/configure_system.sh
        exec:true
    },

    install_firmware:
    {
        RPI_FIRMWARE:/entropy/rpi
        path:plugins/make_stage4/bash/install_firmware.sh
        exec:true
    },

    install_kernel:
    {
        RPI_FIRMWARE:/entropy/rpi
        path:plugins/make_stage4/bash/install_kernel.sh
        exec:true
    #sysroot vars
    },

    #be careful about exporting secrets!!!!
    export_fs:
    {

        text:
        '''
        #!/usr/bin/env sh
        rm /.dockerenv
        sed -i -e 's/rc_sys="docker"/#rc_sys=""/g' etc/rc.conf
        find /etc -iname '._cfg*' -exec rm {} \;
        tar chf /entropy/stage4s/stage4.tar --anchored --exclude=/portage --exclude=/entropy --exclude=/dev/* --exclude=/sys/* --exclude=/proc/* --exclude=/boot/* --exclude=/var/lib/entropy/client/packages --exclude /var/git/meta-repo --exclude /root/.ssh /

        tar chf /entropy/stage4s/boot.tar /boot/
        '''
        exec:true
    },

    export_profiles:
    {
        STAGE4_TAR_PATH:/entropy/stage4s/stage4.tar
        path: plugins/make_stage4/python/export_profiles.py
        exec: true
    },

    #-----------------------------------------------------------
    # file plugins
    # any paths here in SYSROOT_DIR take precedent over auto created plugins


    release:
    {
        text:
        '''
        ###KANTOO###
        '''
        bind:/etc/kantoo-release
    },


    #NOTE: entropy/client.conf is in SYSROOT_DIR
    makeconf:
    {
        PORT_PKGDIR:/portage/packages
        bind: /etc/portage/make.conf
        text:
        '''
#for removing kernel sources in a container
DONT_MOUNT_BOOT=1
PKGDIR={PORT_PKGDIR}
        '''
    },

    entropyrepo:
    {
        REPOSITORY_URI: ''
        REPOSITORY_NAME: ''
        REPOSITORY_DESCRIPTION: ''

        path: plugins/make_stage4/etc/entropy/repositories.conf.d/entropy_kantoo.org
        bind: /etc/entropy/repositories.conf.d/entropy_kantoo.org

    },
    #conifiguring local entropy server for local testing repo
    entropysrv:
    {
        REPOSITORY_URI: ''
        REPOSITORY_NAME: ''
        REPOSITORY_DESCRIPTION: ''

        path: plugins/make_stage4/etc/entropy/server.conf
        bind: /etc/entropy/server.conf
    },

    nsswitch_conf:
    {
        path: plugins/make_stage4/etc/nsswitch.conf
        bind: /etc/nsswitch.conf
    },
    
    #-----------------------------------------------------------
    # dir plugins

    rpi:
    {
        path:sab_workspace/rpi
        bind:/entropy/rpi
        mode:rw
    },

    stage4s:
    {
        path:sab_workspace/stage4s
        bind:/entropy/stage4s
        mode:rw
    },

    #used for unmasking keywordless packages in the repo
    portage_artifacts:
    {
        path: sab_workspace/portage_artifacts
        bind: /portage/packages
        mode: ro
    },

    entropy_artifacts:
    {
        path: sab_workspace/entropy_artifacts
        bind: /entropy/artifacts
        mode: rw
    },


}

